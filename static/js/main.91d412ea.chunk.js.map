{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Component","render","_jsxs","children","this","props","accountBalance","toFixed","Home","_jsx","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","constructor","super","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","creditsView","credits","map","credit","date","slice","amount","description","id","addCredit","Number","parseFloat","placeholder","required","min","step","balance","Debits","debitsView","debits","debit","addDebit","App","logInInfo","newUser","currentUser","data","newCredit","hasOwnProperty","creditList","length","Date","toISOString","newDebit","debitList","componentDidMount","response","fetch","method","error","console","json","Router","basename","Route","exact","path","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91d412ea.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: ${this.props.accountBalance.toFixed(2)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\" />\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br />\r\n        <Link to=\"/login\">Login</Link>\r\n        <br />\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br />\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br /><br />\r\n        <AccountBalance accountBalance={this.props.accountBalance} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Credits = (props) => {\r\n  // Create the list of Credit items\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\r\n      let date = credit.date.slice(0, 10);\r\n      return <li key={credit.id}> ${credit.amount.toFixed(2)} -- {credit.description} -- {date}</li>\r\n    });\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    props.addCredit({\r\n      description: e.target.description.value,\r\n      amount: Number.parseFloat(e.target.amount.value)\r\n    });\r\n\r\n    e.target.description.value = \"\";\r\n    e.target.amount.value = \"\";\r\n  }\r\n\r\n  // Render the list of Credit items and a form to input new Credit item\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n\r\n      {creditsView()}\r\n\r\n      <br />\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <input type=\"text\" name=\"description\" placeholder=\"description\" required />\r\n        <input type=\"number\" name=\"amount\" placeholder='amount' min={0} step={0.01} required />\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n\r\n      <br />\r\n      <AccountBalance accountBalance={props.balance} />\r\n      <br />\r\n\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = (props) => {\r\n  // Create the list of Debit items\r\n  let debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = debit.date.slice(0, 10);\r\n      return <li key={debit.id}> ${debit.amount.toFixed(2)} -- {debit.description} -- {date}</li>\r\n    });\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    props.addDebit({\r\n      description: e.target.description.value,\r\n      amount: Number(parseFloat(e.target.amount.value))\r\n    });\r\n\r\n    e.target.description.value = \"\";\r\n    e.target.amount.value = \"\";\r\n  }\r\n\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n\r\n      {debitsView()}\r\n\r\n      <br />\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <input type=\"text\" name=\"description\" placeholder='description' required />\r\n        <input type=\"number\" name=\"amount\" placeholder='amount' min={0} step={0.01} required />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n\r\n      <br />\r\n      <AccountBalance accountBalance={props.balance} />\r\n      <br />\r\n\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super();\r\n    this.state = {\r\n      accountBalance: 0,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let response;\r\n    let data;\r\n\r\n    // sample credits\r\n\r\n    try {\r\n      response = await fetch(\"https://johnnylaicode.github.io/api/credits.json\", {\r\n        method: \"GET\"\r\n      });\r\n    } catch (error) {\r\n      return console.error(\"Error fetching sample credits: \", error);\r\n    }\r\n\r\n    try {\r\n      data = await response.json();\r\n    } catch (error) {\r\n      return console.error(\"Error parsing sample credits: \", error);\r\n    }\r\n\r\n    for (let credit of data) {\r\n      this.addCredit(credit);\r\n    }\r\n\r\n    // sample debits\r\n\r\n    try {\r\n      response = await fetch(\"https://johnnylaicode.github.io/api/debits.json\", {\r\n        method: \"GET\"\r\n      });\r\n    } catch (error) {\r\n      return console.error(\"Error fetching sample credits: \", error);\r\n    }\r\n\r\n    try {\r\n      data = await response.json();\r\n    } catch (error) {\r\n      return console.error(\"Error parsing sample credits: \", error);\r\n    }\r\n\r\n    for (let debit of data) {\r\n      this.addDebit(debit);\r\n    }\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {\r\n    const newUser = { ...this.state.currentUser };\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({ currentUser: newUser })\r\n  }\r\n\r\n  addCredit = (data) => {\r\n    let newCredit = { ...data };\r\n\r\n    if (!newCredit.hasOwnProperty(\"id\")) {\r\n      newCredit.id = this.state.creditList.length;\r\n    }\r\n\r\n    if (!newCredit.hasOwnProperty(\"date\")) {\r\n      newCredit.date = (new Date()).toISOString();\r\n      // note: .toISOString() doesn't return in local time zone, so \"today\" might look like tomorrow\r\n      // this method call is just to keep data format consistency with the sample data provided by assignment\r\n    }\r\n\r\n    this.setState({\r\n      creditList: [...this.state.creditList, newCredit],\r\n      accountBalance: this.state.accountBalance + newCredit.amount\r\n    });\r\n  }\r\n\r\n  addDebit = (data) => {\r\n    let newDebit = { ...data };\r\n\r\n    if (!newDebit.hasOwnProperty(\"id\")) {\r\n      newDebit.id = this.state.debitList.length;\r\n    }\r\n\r\n    if (!newDebit.hasOwnProperty(\"date\")) {\r\n      newDebit.date = (new Date()).toISOString();\r\n    }\r\n\r\n    this.setState({\r\n      debitList: [...this.state.debitList, newDebit],\r\n      accountBalance: this.state.accountBalance - newDebit.amount\r\n    });\r\n  }\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {\r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} balance={this.state.accountBalance} addCredit={this.addCredit} />)\r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} balance={this.state.accountBalance} addDebit={this.addDebit} />)\r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/assignment3-bank-of-react\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent} />\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\r\n          <Route exact path=\"/login\" render={LogInComponent} />\r\n          <Route exact path=\"/credits\" render={CreditsComponent} />\r\n          <Route exact path=\"/debits\" render={DebitsComponent} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}